@page "/AggregateFormation/Control"
@inject IAggregateConfigurationData aggConfigData
@inject IAggregateConfigurationModelService aggConfigModelService
@inject IUserModelService userModelService 


<h3>Aggregate Formation Simulation</h3>

<DxFormLayout CaptionPosition="CaptionPosition.Vertical" ItemSizeMode="SizeMode">
    <DxFormLayoutItem Caption="Description:" ColSpanMd="8">
        <Template>
            <DxTextBox @bind-Text="@_aggConfigModel.Description"></DxTextBox>
        </Template>
    </DxFormLayoutItem>

    <DxFormLayoutItem Caption="Primary Particles" ColSpanMd="6">
        <Template>
            <DxSpinEdit T="int" @bind-Value="@_aggConfigModel.TotalPrimaryParticles"></DxSpinEdit>
        </Template>
    </DxFormLayoutItem>

    <DxFormLayoutItem Caption="Primary Particles per Cluster" ColSpanMd="6">
        <Template>
            <DxSpinEdit T="int" @bind-Value="@_aggConfigModel.ClusterSize"></DxSpinEdit>
        </Template>
    </DxFormLayoutItem>

    <DxFormLayoutItem Caption="Fractal dimension" ColSpanMd="6">
        <Template>
            <DxSpinEdit T="double" @bind-Value="@_aggConfigModel.Df"></DxSpinEdit>
        </Template>
    </DxFormLayoutItem>

    <DxFormLayoutItem Caption="Fractal prefactor" ColSpanMd="6">
        <Template>
            <DxSpinEdit T="double" @bind-Value="@_aggConfigModel.Kf"></DxSpinEdit>
        </Template>
    </DxFormLayoutItem>
</DxFormLayout>

<EditForm Model="@_aggConfigModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary Model="@_aggConfigModel" />
 
    <div class="form-group">
        <label class="control-label">Primary particle size distribution</label>
        <select @onchange="PSDMethodChange" class="form-control-sm">
            <option value="@_aggConfigModel.PrimaryParticleSizeDistribution">"@_aggConfigModel.PrimaryParticleSizeDistribution"</option>
            @foreach (var m in new List<string> { "DissDefault", "LogNormal", "Normal", "Monodisperse" })
            {
                <option value="@m">"@m"</option>
            }
        </select>

        <label class="control-label">Aggregate size distribution</label>
        <select @onchange="ASDMethodChange" class="form-control-sm">
            <option value="@_aggConfigModel.AggregateSizeDistribution">"@_aggConfigModel.AggregateSizeDistribution"</option>
            @foreach (var m in new List<string> { "DissDefault", "LogNormal", "Normal", "Monodisperse" })
            {
                <option value="@m">"@m"</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label class="control-label">Aggregate formation method</label>
        <select @onchange="AggFormationMethodChange" class="form-control-sm">
            <option value="@_aggConfigModel.AggregateFormationFactory">"@_aggConfigModel.AggregateFormationFactory"</option>
            @foreach (var m in new List<string> { "CCA", "PCA" })
            {
                <option value="@m">"@m"</option>
            }
        </select>
    </div>


    <DxButton RenderStyle="ButtonRenderStyle.Primary" Text="Advanced settings" @onclick="@(() => _isPopupVisible = true)" />

    <DxPopup HeaderText="Advanced Settings"
             @bind-Visible="@_isPopupVisible"
             Scrollable="true">
        <Content>
            <div class="form-group">
                <label class="control-label">Mean radius calculation method</label>
                <select @onchange="MeanRadiusMethodChange" class="form-control">
                    <option value="@_aggConfigModel.RadiusMeanCalculationMethod">"@_aggConfigModel.RadiusMeanCalculationMethod"</option>
                    @foreach (var m in new List<string> { "Geometric", "Arithmetic", "Sauter" })
                    {
                        <option value="@m">"@m"</option>
                    }
                </select>

                <label class="control-label">Mean aggregate size calculation method</label>
                <select @onchange="MeanAggregateSizeMethodChange" class="form-control">
                    <option value="@_aggConfigModel.AggregateSizeMeanCalculationMethod">"@_aggConfigModel.AggregateSizeMeanCalculationMethod"</option>
                    @foreach (var m in new List<string> { "Geometric", "Arithmetic" })
                    {

                        <option value="@m">"@m"</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label class="control-label">Epsilon - Minimum distance factor of two primary particles</label>
                <InputNumber @bind-Value="_aggConfigModel.Epsilon" class="form-control" />
                <ValidationMessage For="@(() => _aggConfigModel.Epsilon)" class="text-danger" />

                <label class="control-label">Delta - Maximum distance factor of two primary particles</label>
                <InputNumber @bind-Value="_aggConfigModel.Delta" class="form-control" />
                <ValidationMessage For="@(() => _aggConfigModel.Delta)" class="text-danger" />
            </div>
            <div class="form-group">
                <label class="control-label">Maximum attempts to set a cluster</label>
                <InputNumber @bind-Value="_aggConfigModel.MaxAttemptsPerCluster" class="form-control" />
                <ValidationMessage For="@(() => _aggConfigModel.MaxAttemptsPerCluster)" class="text-danger" />

                <label class="control-label">Maximum attempts to set an aggregate</label>
                <InputNumber @bind-Value="_aggConfigModel.MaxAttemptsPerAggregate" class="form-control" />
                <ValidationMessage For="@(() => _aggConfigModel.MaxAttemptsPerAggregate)" class="text-danger" />
            </div>
            <div class="form-group">
                <label class="control-label">A large number for internal comparison</label>
                <InputNumber @bind-Value="_aggConfigModel.LargeNumber" class="form-control" />
                <ValidationMessage For="@(() => _aggConfigModel.LargeNumber)" class="text-danger" />

                <label class="control-label">Random generator seed (-1 for no custom seed)</label>
                <InputNumber @bind-Value="_aggConfigModel.RandomGeneratorSeed" class="form-control" />
                <ValidationMessage For="@(() => _aggConfigModel.RandomGeneratorSeed)" class="text-danger" />
            </div>
        </Content>
        <FooterTemplate>
            <DxButton RenderStyle="ButtonRenderStyle.Primary" @onclick="@(() => _isPopupVisible = false)" Text="Close" />
        </FooterTemplate>
    </DxPopup>
    <div class="form-group">
        <input type="submit" value="Save configuration" class="btn btn-primary" />
    </div>
</EditForm>



@code {
    SizeMode SizeMode { get; set; }
    private bool _isPopupVisible { get; set; }

    private AggregateConfigurationModel _aggConfigModel;


    protected override async Task OnParametersSetAsync()
    {
        _aggConfigModel = aggConfigModelService.AggregateConfigurationModel;
    }

    private void MeanRadiusMethodChange(ChangeEventArgs e)
    {
        if (string.IsNullOrWhiteSpace(e.Value.ToString()) == false)
        {
            _aggConfigModel.RadiusMeanCalculationMethod = e.Value.ToString();
        }
    }

    private void MeanAggregateSizeMethodChange(ChangeEventArgs e)
    {
        if (string.IsNullOrWhiteSpace(e.Value.ToString()) == false)
        {
            _aggConfigModel.AggregateSizeMeanCalculationMethod = e.Value.ToString();
        }
    }

    private void PSDMethodChange(ChangeEventArgs e)
    {
        if (string.IsNullOrWhiteSpace(e.Value.ToString()) == false)
        {
            _aggConfigModel.PrimaryParticleSizeDistribution = e.Value.ToString();
        }
    }

    private void ASDMethodChange(ChangeEventArgs e)
    {
        if (string.IsNullOrWhiteSpace(e.Value.ToString()) == false)
        {
            _aggConfigModel.AggregateSizeDistribution = e.Value.ToString();
        }

    }

    private void AggFormationMethodChange(ChangeEventArgs e)
    {
        if (string.IsNullOrWhiteSpace(e.Value.ToString()) == false)
        {
            _aggConfigModel.AggregateFormationFactory = e.Value.ToString();
        }
    }

    private async Task HandleValidSubmit()
    {
        var id = await aggConfigData.CreateAggregateConfiguration(_aggConfigModel);

    }
}
